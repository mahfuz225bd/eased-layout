/*!
 * Eased Layout Framework v1.0.0
 * File Name: dragbar.min.js
 * Description: This is for make a resizable grid layouts.
                - CSS file defines styles for vertical and horizontal dragbars.
                - JS file adds interactive mouse-driven resizing for grid rows and columns.
                Both files are required for proper functionalityâ€”CSS for styling and layout, JavaScript for interactive behavior. Ideal for building flexible, user-resizable interfaces.
 * Author: Muhammad Sultan Al Mahfuz
 * Copyright (c) 2025 by Muhammad Sultan Al Mahfuz
 * Licensed under the MIT License
 *
 * Full documentation and usage instructions are available in the `README.md` file. (https://github.com/mahfuz225bd/eased-layout?tab=readme-ov-file#documentation)
*/

function setRowHeightsForAllGrids(){document.querySelectorAll(".resizable-grid").forEach((e=>{const t=Array.from(e.children).filter((e=>!e.matches('[role="separator"][aria-orientation="horizontal"]'))),r=100/t.length;t.forEach((e=>{e.style.height=`${r}%`}))}))}function initVerticalDrag(e,t,r){let n=!1;e.addEventListener("mousedown",(e=>{e.preventDefault(),n=!0,document.body.style.userSelect="none"})),document.addEventListener("mousemove",(o=>{if(!n)return;const i=e.parentElement,l=i.getBoundingClientRect(),a=o.clientX-l.left,c=t.getBoundingClientRect(),s=r.getBoundingClientRect(),d=c.left-l.left,u=c.width+s.width,h=a-d;if(h>50&&h<u-50){const e=i.offsetWidth;t.style.width=h/e*100+"%",r.style.width=(u-h)/e*100+"%"}})),document.addEventListener("mouseup",(()=>{n=!1,document.body.style.userSelect=""}))}function initHorizontalDrag(e,t,r,n){let o=!1;e.addEventListener("mousedown",(e=>{e.preventDefault(),o=!0,document.body.style.userSelect="none"})),document.addEventListener("mousemove",(e=>{if(!o)return;const i=n.getBoundingClientRect(),l=e.clientY-i.top,a=i.height;if(l>50&&l<a-50){const e=l/a*100,n=100-e;t.style.height=`${e}%`,r.style.height=`${n}%`}})),document.addEventListener("mouseup",(()=>{o=!1,document.body.style.userSelect=""}))}function initAllGrids(){setRowHeightsForAllGrids(),document.querySelectorAll(".resizable-grid").forEach((e=>{const t=Array.from(e.children).filter((e=>!e.matches('[role="separator"][aria-orientation="horizontal"]')));e.querySelectorAll('[role="separator"][aria-orientation="horizontal"]').forEach(((r,n)=>{t[n+1]&&initHorizontalDrag(r,t[n],t[n+1],e)})),t.forEach((e=>{const t=Array.from(e.children).filter((e=>!e.matches('[role="separator"][aria-orientation="vertical"]')));e.querySelectorAll('[role="separator"][aria-orientation="vertical"]').forEach(((e,r)=>{t[r+1]&&initVerticalDrag(e,t[r],t[r+1])}))}))}))}document.addEventListener("DOMContentLoaded",initAllGrids);