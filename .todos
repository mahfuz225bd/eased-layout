## TODOs for Future Releases

- Drag and Drop
- row span, col span and more features for gird.grid
- Complete eased-layout.js (to manage/control the full framework)
- Restore semantic layout

- Add more features to helpers.css
- Complete test code for helpers

Sidebar

- Collapse sidebar
- Fixed sidebar
- Sidenav overlay
- Sidenav overlay without animation
- Sidenav push \w opacity
- Sidenav full width
- Full Screen Navigation (Slide Left, Right, Top, Bottom, No animation)

- Shrink on scroll
- Scroll up button
- Overlay
- Change bg on scroll
- Read more/less
- Scroll Indicator
- Gradient Bg scroll

- Update Basic File Structure section of [README.md](https://github.com/mahfuz225bd/eased-layout?tab=readme-ov-file#) file.
- Check and update (if necessary) the full documentation
- Update release note

**Possible Future Enhancements:**

- **Special Built-in Layouts:**
  - Masonry Layout
  - Overlay Layout
  - (List more layouts here)
- **Old Browser Support for Special Layouts:**
  - Explore implementing with CSS1 for older browsers (**Note:** Challenging)
- **Advanced Responsive Techniques for Grid System or Semantic Layout:** Breakpoints, container fluid, min max width, gutter, column wrapping, unlimited auto column,
- **To Explore and Implement New Techniques:**
  Here is the list of unique URLs for layout design libraries:
  1. https://github.com/kristoferjoseph/flexboxgrid
  2. https://github.com/devlint/gridlex
  3. https://simplegrid.io/
  4. https://www.oddbird.net/2017/06/28/susy3/
  5. http://gridlex.devlint.fr/
  6. https://milligram.io/grids.html
  7. http://www.responsivegridsystem.com/
  8. https://semantic-ui.com/collections/grid.html
  9. https://github.com/jonikorpi/Golden-Grid-System
  10. https://neat.joeldare.com/#examples
  11. https://vladocar.github.io/SMART-CSS-GRID/
  12. https://github.com/oddbird/susy
  13. https://github.com/daveberning/griddle
  14. https://github.com/necolas/griddle
  15. https://jackpopp.github.io/griddle/
  16. https://goldengridsystem.com
  17. https://neat.bourbon.io
  18. http://oddbird.net/susy/
  19. https://thisisdallas.github.io/Simple-Grid/
  20. http://960.gs/
  21. https://baselinecss.com
  22. https://materializecss.com
  23. http://blueprintcss.org/
  24. https://cardinalcss.com/
  25. https://tachyons.io/
  26. https://picturepan2.github.io/spectre/
  27. https://grid.simplecss.org
  28. https://blazecss.com/
  29. https://cssgr.id/
  30. https://www.cutestrap.com/
  31. https://purecss.io/
  32. https://bulma.io/
  33. https://get.foundation/
  34. https://getskeleton.com/
  35. https://www.jeet.gs/
  36. https://unsemantic.com/
  37. https://www.ymc.ch/en/multicolumn-css-grid/
  38. https://www.chota.io/
  39. https://picnicss.com/
  40. https://kube.cssblocks.com/
  41. https://mini.css.org/
  42. https://korynikollari.com/alkaline/
  43. NPM Package Tag: https://www.npmjs.com/search?q=keywords:layout
  44. NPM Package Tag: https://www.npmjs.com/search?q=keywords:breakpoints
  45. NPM Package Tag: https://www.npmjs.com/search?q=keywords%3Ablueprint&page=16&perPage=20
  46. Search "Layout" at: https://bower.io/search/
  47. https://plugins.jquery.com/tag/ui/
  48. https://plugins.jquery.com/tag/responsive/
  49. https://plugins.jquery.com/tag/scroll/

List of special types of layouts (Generated from ChatGPT):

| Layout                 | Key Feature                                                    | Use Case                                                                    |
| ---------------------- | -------------------------------------------------------------- | --------------------------------------------------------------------------- |
| **F-layout**           | F-shaped content flow, focused on the top left                 | Websites with key content placed in the top-left corner, like news websites |
| **Lattice**            | Grid-like structure with items arranged in rows and columns    | Interactive interfaces, complex forms, and applications                     |
| **Single Column**      | A single vertical column layout                                | Mobile-first websites, blogs, and simple landing pages                      |
| **Full Screen**        | Content stretches across the entire viewport                   | Immersive websites, landing pages, single-page applications                 |
| **Magazine Layout**    | Newspaper-style layout with multiple columns                   | Digital magazines, newspapers, and multi-article websites                   |
| **Stacked**            | Items stacked vertically or horizontally                       | Simple blogs, content-heavy sites where elements stack cleanly              |
| **Hero Layout**        | Large, visually-striking header section, often with an image   | Landing pages, product promotions, and portfolio sites                      |
| **Sidebar Layout**     | Main content with a sidebar for extra information              | Blogs, documentation, product pages                                         |
| **Circular Layout**    | Content arranged in circular or spiral fashion                 | Creative websites, portfolios, artistic pages                               |
| **Tile Layout**        | Items arranged in uniform tiles, typically with equal height   | Product displays, online catalogs, photo galleries                          |
| **Interactive Layout** | Layout that adjusts dynamically with user interaction          | Games, interactive applications, custom UI systems                          |
| **Parallax Scrolling** | Background and foreground move at different speeds             | Storytelling websites, promotional pages, creative portfolios               |
| **Card Deck**          | Cards stacked in a grid with clear visual separation           | Social media feeds, product listings, service features                      |
| **Modular Layout**     | Repetitive blocks or modules that can be rearranged            | E-commerce websites, portfolio sites, content management systems            |
| **Split Screen**       | Two or more sections, each taking up a full half of the screen | Product showcases, interactive pages, contrast-based designs                |
| **Timeline Layout**    | Content displayed chronologically, often in a line or path     | Events, project milestones, historical content pages                        |

These additional layout types cover a broad range of design purposes, from creative and artistic websites to practical and function-oriented sites. While the exact number of total can vary, it is safe to say there are **more than 100 layout types** across all design disciplines when considering both traditional and modern approaches. Many of these layouts overlap or evolve as new trends and technologies emerge, which further expands the number.

Categories of Layout (Generated from ChatGPT):

1. Web Design Layouts (20-30 types)

   Includes types like Masonry, Grid, Flexbox, Card, Magazine, F-Layout, Lattice, and others.

2. Print Layouts (10-20 types)

   Includes Magazine, Newspaper, Poster, Flyer, Brochure, Report, and Book layouts.

3. UI/UX Layouts (15-20 types)

   Includes Modal, Dashboard, Sidebar Navigation, Form, Tab, and Content Area layouts.

4. Architectural Layouts (10-15 types)

   Includes Open-Plan, Closed-Plan, Zoning, Grid (city planning), Radial, and Linear layouts.

5. Product Layouts (5-10 types)

   Includes Product Display, Retail Shelf, Packaging, and E-commerce layouts.

6. Other Layouts (5-10 types)

   Includes layouts for Gaming UI, 3D Environments, Virtual Reality, and Industrial Design.

Screen Width of Small Devices (Collected from ChatGPT):

| **Device Type**       | **Typical Screen Width** | **Example Resolution**        | **Notes**                           |
| --------------------- | ------------------------ | ----------------------------- | ----------------------------------- |
| **Tiny OLED Modules** | 64px – 128px             | 64×32, 128×64                 | Arduino/Raspberry Pi add-ons        |
| **Fitness Trackers**  | 72px – 160px             | 72×40, 128×64, 160×80         | Xiaomi Mi Band, Fitbit, etc.        |
| **Feature Phones**    | 128px – 240px            | 128×160, 176×220, 240×320     | Nokia 3310 (new), old Samsung, etc. |
| **Smartwatches**      | 240px – 454px            | 240×240, 360×360, 454×454     | Apple Watch, Galaxy Watch           |
| **Small Phones**      | 320px – 540px            | 320×480 (iPhone 3GS), 540×960 | Android phones (2010–2014 era)      |
| **Mini Web Views**    | \~360px                  | 360 CSS pixels (viewport)     | Often used as mobile design base    |
